# -*- coding: utf-8 -*-
"""PracticaVA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NPkYuQACgnhn8S14nrrYn0L0sPfN1X93
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt
from colorsys import hsv_to_rgb
from random import random

"""
ret, umbralizado = cv2.threshold(img,127,255,cv2.THRESH_BINARY)
plt.imshow(umbralizado,cmap='gray')
plt.show()

contours,hierarchy = cv2.findContours(umbralizado,cv2.RETR_LIST,cv2.CHAIN_APPROX_SIMPLE)
print("Number of contours:" + str(len(contours)))
for contour in contours:
  x,y,w,h = cv2.boundingRect(contour)
  margen = 0.05
  ratio = w/h
  if (1 - margen < ratio < 1+ margen):
    print(ratio)
    cv2.rectangle(img_color,(x,y),(x+w,y+h),(255,0,0),2)
    plt.imshow(img_color)
    plt.show()
"""
original = cv2.imread('00009.ppm',1)
img = cv2.imread('00009.ppm',0)
img_color = cv2.cvtColor(original.copy(), cv2.COLOR_BGR2RGB)
plt.figure(figsize=(5,5))
plt.imshow(img, cmap='gray')
plt.show()

output = np.zeros((img.shape[0],img.shape[1],3),dtype=np.uint8)
mser = cv2.MSER_create(_delta=5, _max_variation=0.010, _max_area=2000)
polygons = mser.detectRegions(img) 
print("Regiones:" + str(len(polygons[0])))
for polygon in polygons[0]: 
  colorRGB = hsv_to_rgb(random(),1,1)     
  colorRGB = tuple(int(color*255) for color in colorRGB)     
  output = cv2.fillPoly(output,[polygon],colorRGB)
  x,y,w,h = cv2.boundingRect(polygon)
  margen = 0.1
  ratio = w/h
  if (1 - margen < ratio < 1+ margen):
    print(ratio)
    cv2.rectangle(img_color,(x,y),(x+w,y+h),(255,0,0),2)
    plt.imshow(img_color)
    plt.show()

plt.imshow(output)
plt.show()

original = cv2.imread('00000.ppm',1)
img = cv2.imread('00000.ppm',0)
img_color = cv2.cvtColor(original.copy(), cv2.COLOR_BGR2RGB)
plt.figure(figsize=(5,5))
plt.imshow(img, cmap='gray')
plt.show()

output = np.zeros((img.shape[0],img.shape[1],3),dtype=np.uint8)
mser = cv2.MSER_create(_delta=5, _max_variation=0.015, _max_area=2000)
polygons = mser.detectRegions(img) 
print("Regiones:" + str(len(polygons[0])))
for polygon in polygons[0]: 
  colorRGB = hsv_to_rgb(random(),1,1)     
  colorRGB = tuple(int(color*255) for color in colorRGB)     
  #output = cv2.fillPoly(output,[polygon],colorRGB)
  x,y,w,h = cv2.boundingRect(polygon)
  margen = 0.1
  ratio = w/h
  if (1 - margen < ratio < 1+ margen):
    print(ratio)
    cv2.rectangle(img_color,(x,y),(x+w,y+h),(255,0,0),2)
    plt.imshow(img_color)
    plt.show()

plt.imshow(output)
plt.show()

